#!/bin/bash
DIR=`dirname $0`
. /etc/restatemachine/shell_helpers.inc

INPUT=`cat`

Error () {
        restatemachine_transition_to "stop"
        restatemachine_transition_after_seconds "0"
        restatemachine_status_message "$1"
        exit 0
}

INSTANCE_NAME=`echo "$INPUT" | jq -r '.instance_name'`
INSTANCE_ID=`echo "$INPUT" | jq -r '.instance_id'`
VPC_ID=`echo "$INPUT" | jq -r '.vpc_id'`
SECURITY_GROUP_ID=`echo "$INPUT" | jq -r '.security_group_id'`
# Name the instance
RESULT=$(aws ec2 create-tags --resources "$INSTANCE_ID" --tags "Key=Name,Value=$INSTANCE_NAME" 2>&1)

EC2_GROUPS=`aws ec2 describe-security-groups --filter="Name=vpc-id,Values=$VPC_ID" 2>&1`
GROUP_IDS="$SECURITY_GROUP_ID "
# Find all existing security group ids and assign them to the server
while read group_name; do
        GROUP_ID=`echo "$EC2_GROUPS" | jq -r ".SecurityGroups[]|select(.GroupName==\"${group_name}\").GroupId" 2>&1`
        GROUP_IDS="$GROUP_IDS$GROUP_ID "
done < <(echo "$INPUT" | jq -r '.existing_security_groups[]') # Parse the rules
RESULT=$(aws ec2 modify-instance-attribute --instance-id "$INSTANCE_ID" --groups $GROUP_IDS 2>&1)
if [ "$?" != "0" ]; then
        RES=`echo $RESULT | tr -d '\r'`
        Error "{\"status\":\"failed\", \"message\":\"Failed to assign security groups: $RES\""
fi

INPUT=`echo -n "$INPUT" | sed  '$s/}/, "status":"ok" }/'`

echo -n "$INPUT"
restatemachine_transition_to "stop"
restatemachine_transition_after_seconds "0"
restatemachine_status_message "{\"status\":\"done\"}"
